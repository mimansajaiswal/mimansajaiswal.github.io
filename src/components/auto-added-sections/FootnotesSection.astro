---
import type { Footnote } from "@/lib/interfaces";
import { numberToAlphabet } from "@/utils";
import NBlocksPopover from "@/components/popover/NBlocksPopover.astro";
import FootnoteContent from "@/components/notion-blocks/FootnoteContent.astro";
import { adjustedFootnotesConfig } from "@/lib/notion/client";

export interface Props {
	footnotes: Footnote[];
}

const { footnotes } = Astro.props;

// Remove duplicates based on Marker (in case same footnote appears multiple times)
const uniqueFootnotes = Array.from(new Map(footnotes.map((fn) => [fn.Marker, fn])).values());

// Sort by Index (sequential numbering) if available, otherwise by Marker
uniqueFootnotes.sort((a, b) => {
	if (a.Index && b.Index) {
		return a.Index - b.Index;
	}
	return a.Marker.localeCompare(b.Marker);
});

// Check if start-of-child-blocks is enabled (no spacing needed for block-type footnotes)
const isStartOfChildBlocks =
	adjustedFootnotesConfig?.["in-page-footnotes-settings"]?.source?.["start-of-child-blocks"] ===
	true;

// Define styles matching Interlinked Content section
const footnotesHeaderStyles = `
	#autogenerated-footnotes::before {
		content: "#";
		position: absolute;
		color: color-mix(in srgb, var(--color-accent) 50%, transparent);
		margin-left: -1.5rem;
		display: inline-block;
		opacity: 0;
		transition: opacity 0.3s ease;
	}

	#autogenerated-footnotes:hover::before {
		opacity: 1;
	}

	#-tocid--autogenerated-footnotes,
	#-vistocid--autogenerated-footnotes {
		display: block !important;
	}

	#-bottomtocid--autogenerated-footnotes {
		display: inline !important;
	}

	.footnote-content {
		display: inline;
	}
`;
---

{
	uniqueFootnotes.length > 0 && (
		<section class="footnotes-section mt-12">
			<hr class="divider bg-accent/30 mx-auto my-4 h-0.5 w-full rounded-sm border-none" />
			<h2
				class="non-toggle-h2 mb-4 cursor-pointer text-2xl font-normal"
				id="autogenerated-footnotes"
				onclick="
					var fullUrl = `${window.location.origin}${window.location.pathname}#${id}`;
					navigator.clipboard.writeText(fullUrl);
					window.history.pushState(null, '', fullUrl);
					document.getElementById(`${id}`).scrollIntoView({ behavior: 'smooth' });
				"
			>
				Footnotes
			</h2>
			<style set:html={footnotesHeaderStyles} />
			<ol class:list={["list-none", { "space-y-2": !isStartOfChildBlocks }]}>
				{uniqueFootnotes.map((footnote) => (
					<li id={`footnote-def-${footnote.Marker}`} class="flex items-baseline gap-2">
						{footnote.SourceBlock ? (
							<NBlocksPopover
								block={footnote.SourceBlock}
								linkedTo={`#${footnote.SourceBlockId}`}
								popoverSpanText={`[${numberToAlphabet(footnote.Index) || footnote.Marker}]`}
								linkText="Jump to source"
								isInterlinkedBack={true}
							/>
						) : (
							<span class="text-accent-2/60 shrink-0 font-mono text-sm">
								[{numberToAlphabet(footnote.Index) || footnote.Marker}]
							</span>
						)}
						<div class="flex-1">
							<FootnoteContent content={footnote.Content} sourceBlockId={footnote.SourceBlockId} />
						</div>
					</li>
				))}
			</ol>
		</section>
	)
}
